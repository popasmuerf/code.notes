Topic:
===============================
A topic is a category or feed name
to which messages are published by
the message producers.  In Kafka,
topics are partitioned and each partition
is represented by the the ordered  immutable
sequence of messages.  A Kafka cluster
maintains the partitioned log
for each topic.  Each message
in the partition is assigned
a unique sequential ID called 

Broker
==============================
A Kafka cluster consists of one
or more servers where each one may
have one or more server processes
running and is calle th borker.  Topics
are created within the context of broker
processes


Zookeeper: 
==============================
ZooKeeper serves as the coordination
interface between the Kafka
broker and consumers.  The
Zookeeper overview given on the Hadoop
Wiki site is a sfollows.


Producers: Producers publish data to the topics
by choosing the appropiate partition within the
topic.  For load balancing, the allocation of messages to the topic  partition can be done in 
a round-robin fashion or using a custom defined
function


Consumer: Consumers are the applications or
or processes that subscribe to topics and process the feed of published messages



/bin/spark-submit \
  --class com.fractal.spark.pfsense_etl.Main \
  --master local[8] \
  $JARPATH \
  100




http://www.gotw.ca/publications/using_auto_ptr_effectively.htm

Intro
==============================
No time to add anything substantive....
check the ryme y'all:

++++++++++++++++++++++++++++++++
//
//  main.cpp
//  cmd_cpp
//
//  Created by Michael Brown on 8/25/15.
//  Copyright (c) 2015 Michael Brown. All rights reserved.
//

#include <iostream>
#include <cstddef>
struct EnemySpaceShip
{
    int x_coordinate ;
    int y_coordiante ;
    int weapon_power ;
    EnemySpaceShip * p_next_enemy ;
};
EnemySpaceShip* addNewEnemyList(EnemySpaceShip* p_list){
    EnemySpaceShip* p_ship = new EnemySpaceShip;
    p_ship->x_coordinate = 0 ;
    p_ship->y_coordiante = 0 ;
    p_ship->weapon_power = 20 ;
    p_ship->p_next_enemy = p_list;
    return p_ship ;
}
EnemySpaceShip* getNewEnemy(){
    EnemySpaceShip*  p_ship = new EnemySpaceShip() ;
    p_ship->x_coordinate = 0 ;
    p_ship->y_coordiante = 0 ;
    p_ship->weapon_power = 20 ;
    p_ship->p_next_enemy = nullptr ;
    return p_ship ;
}
void upgradeWeapons(EnemySpaceShip* p_ship){
    p_ship->weapon_power += 10 ;
}
int main(int argc, const char * argv[]) {
    // insert code here...
    std::cout << "running in main....!\n";
    std::cout << "generate new enemy....!\n";
    EnemySpaceShip* p_enemy = getNewEnemy() ;
    upgradeWeapons(p_enemy);  // <----THIS
    delete p_enemy ;  // <----THIS
    EnemySpaceShip* p_enemy1 = getNewEnemy();		// <----THIS
    std::auto_ptr<EnemySpaceShip>p_enemyAutoPtr(p_enemy1);  // <----THIS
    //no need to clean this up.
    return 0;
}












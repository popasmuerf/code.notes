Props
https://doc.akka.io/docs/akka/2.5/actors.html
============================================
Props is a configuration class to specify options
for the creation of actors, think of it as an immutable
and thus freely shareable recipe for creating an 
ator including assoicated deployment information(e.eg
which dispatcher to use, see more below).
Here are some examples of how to create a Props instance.


//Scala
//code start


import akka.actor.Actor
import akka.actor.Props
import akka.event.Logging

val props1 = Props[ActorPrime]
val props2 = Props(new ActorWithArgs("arg"))
val props3 = Props(classOf[ActorWithArgs],"args")



//Scala
//code end


//Java
//code start

317 Muddy Branch Rd, Gaithersburg, MD 20878


import akka.actor.Actor
import akka.actor.Props
import akka.event.Logging

Props props1 = new Props.create(ActorPrime.class);
Props props2 = new Props.create(ActorWithArgs.class,()->ActorWithArgs("arg"));
Props props3 = new Props.create(ActorWithArgs.class,"arg");

//Java
//code end





Recommended  practices
=============================================================
It is a good idea to provide static factory methods for each Actor
which help keeping the creation of 
suitable Props as close to the actor definition as
possible.  

This also avoid the pitfalls associated with using the
Props.create(...) method which 
takes arguments as consructor parameters,
since witin static method the given code block will
not retain a reference to its enclosing scope


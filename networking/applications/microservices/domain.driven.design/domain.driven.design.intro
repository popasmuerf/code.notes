A good software design is a smuch the ky to the 
succes of a product or services as the functionaloities
offered by it.  It carries equal weight to the
success of product; for example, Amazon.com provdes the shopping
platform but its architecture desin mames it different from other
similar sites and contributes to its success.  It shows how important
a software or archtitecute design is for the success
of a product/service.







Domain-Driven Design fundamentals
=============================================
An enterpise or cloud application solves business problems
and other real world problems.  These problems cannot be 
reaolved without knowledge of the the domain.
Combining domain and software design, it offers a software
desing methodology known as DDD.

When we develop softare to implement real world
scenarios offering the functionalities of a domain, we create
a model of the domain.  A model is an abstractio or blueprint
of the domain.



Desining models
=========================================
It's not rocket science...but it does/will
involve refinement and input via domain experts.
Designing models is a collective effort that involves:

	*	SMEs
	*	Software Designers/Architects/engineers
	*	Programmers

General process:
------------------------------------------
	*	Organize information
		-	Divide it into smaller parts
				*	Group parts into logical modules
						-	Take up module...or repeat process until
							a module can no longer be reasonably
							broken down.

	*	Document model
	*	Code design into a Domain modeld code desing
	*	Implement Domain model




Tools
=============================================================
*	Adopt standard, ubiqoutous language
*	UML
*	Multilayered architecture
	-	Presentation layer(UI)
	-	Application Layer(coordination/orch/applicaiton state)
	-	Domain layer(business logic, service layer)
	-	Infrastructure layer(supporting libraries, persistence)



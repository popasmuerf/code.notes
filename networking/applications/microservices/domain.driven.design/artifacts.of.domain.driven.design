Domain Driven Design(DDD)
=================================
A good software design is a smuch the ky to the 
succes of a product or services as the functionaloities
offered by it.  It carries equal weight to the
success of product; for example, Amazon.com provdes the shopping
platform but its architecture desin mames it different from other
similar sites and contributes to its success.  It shows how important
a software or archtitecute design is for the success
of a product/service.



Presentation Layer
==============================
This layer represents the UI and 
provides the user interface for
teh interaction and information
display.  This layer could be 
a web application, mobile app 
or a third-party application
consuming your services.


Application layer
==========================
This layer is responsible for application
logic.  It maintains and coordinates
teh overall flow of the 
product/service.  It does not
contain business logic or UI.
It may hold the state of application
objects like tasks in
progress.  For example, your
product REST services would 
be teh part of this application
layer.

Domain layer
=============================
The domain layer is a very
important layer as it contains
information and business logic.
It persists the state of the 
business objects,and communicates
these persisted states to
the infrastructure layer.



Infrastructure layer
=========================
The layer provides support to all the 
other layers and is responsible for
communication among the other
layers.  It contains the supporting
libraries that are used by
the other layers.  It also implements
the presistence of business objects.









Domain-Driven Design fundamentals
=============================================
An enterpise or cloud application solves business problems
and other real world problems.  These problems cannot be 
reaolved without knowledge of the the domain.
Combining domain and software design, it offers a software
desing methodology known as DDD.

When we develop softare to implement real world
scenarios offering the functionalities of a domain, we create
a model of the domain.  A model is an abstractio or blueprint
of the domain.



Desining models
=========================================
It's not rocket science...but it does/will
involve refinement and input via domain experts.
Designing models is a collective effort that involves:

	*	SMEs
	*	Software Designers/Architects/engineers
	*	Programmers

General process:
------------------------------------------
	*	Organize information
		-	Divide it into smaller parts
				*	Group parts into logical modules
						-	Take up module...or repeat process until
							a module can no longer be reasonably
							broken down.

	*	Document model
	*	Code design into a Domain modeld code desing
	*	Implement Domain model





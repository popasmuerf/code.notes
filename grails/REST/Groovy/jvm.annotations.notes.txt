https://docs.oracle.com/javase/tutorial/java/annotations/type_annotations.html

Lession: Annotations
===========================================================
Annotations, a form of metadata, proviide data about a program that is not part 
of the program itself.  annotations have no direct effect on the operation
of the code they annotate.


The use of Annotations
============================================================
    *   Information for the compiler
            -   used to detect errors or suppress warnings
    *   Compile-time and deployment-time processing
            -   Software tools can process annotation information
                to generate code, XML files, and so forth
    *   Runtime processing
            -   Some annotations are available to be examined at runtime
            
       
       
Formate of an Annotation
=============================================================     
syntax :  @<name>


Where the "@" preceding the name tells the compiler that what follows
(the name) is an annotation. 

Examples
-------------------------------------------------------------

    @Override
    void mySuperMethod(){....}
    


Annotations can include elements
===============================================================
......which can be named or unamed, and there
are values for those elements

Example:
--------------------------------------------------------------
@Author(
    name = "Ben Franklin"
    date = "3/17/2003"
)
class myClass{ .... }


//-or-

@SupressionWarnings(value = "unchecked")
void myMethod(){....}


//-or- if annotations have only one value

@Author("Jane Goodall)


//-or- we can use multiple annotations on the same declaration

@Author(name = "Jane Doe")
@EBook
class MyClass{......}


Where Annotations Can be Used
===================================================================
Annotations can be applied to declarations: declarations of
classes, fields, methods, and other program elements
When used on a declarations, each annotations often appears,
by convention, on its own line.



As of the Java SE 8 release, annotations can also be applied to the
use of types.  Here are some examples:

    *   Class instances creation expression:
            new @Interned  MyObject();
    *   Type cast:
            myString(@NonNull String) str ;
    *   implements clause:
            class UmodifiableList<T>{....}
    *   Thrown exception declaration:
            @Critical TemperatureException{....}


More about Grails tags
=================================================================================
Part of Grail's strenth in teh view layer is its tag library.
Grails has tags to address everying form conditional logic and
iterating collection to displyaing errors.  This section provides
an overview of the Grails tags.



Logical Tags
===========================================================================
Logical tags allows you to buidl conditional "if-elseif-else" logc



Tag Name								Tag Description
--------------------------				------------------------------------------------
<g:if>									Logical switch based upon a test expression

<g:else>								The else portion of an if statement

<g:elseif>								The elseif portion of an if statement




Iteration Tags
=========================================================================================
Iteration tags are used to iterate over collectio or loop until a condition is false.



Tag Name								Tag Description
--------------------------				------------------------------------------------
<g:while>								Loops while test condition is true

<g:each>								Iterates over a collection

<g:collect>								Iterates over a collection and transforms the results
										as defined in the expr paramter

<g:findAll>								Iterates over a collection where the elements math the
										GPath defined in the expr parameter

<g:grep>								The else portion of an if statement


Assignment Tags
=========================================================================================
You sue assignment tags to create and assign a value to a variable.  



Tag Name								Tag Description
--------------------------				------------------------------------------------
<g:def>(deprecated)						Defines  a variable to be used within the GSP page

<g:set>									Sets the value of a variable used within the GSP page



Linking Tags
=========================================================================================
We create URLs with these tags



Tag Name								Tag Description
--------------------------				------------------------------------------------
<g:link>								Creates HTML link using supplied parameters

<g:createLink>							Creates a link that you can use within other tags

<g:createLinkTo>						Crates a link to a directory or file	



Ajax Tags
=========================================================================================
You can use Ajax tags to build an Ajax-aware appliation.



Tag Name								Tag Description
--------------------------				------------------------------------------------
<g:remoteField>							Creates a text field that involkes a link when changed

<g:remoteFunction>						Creates a remote function that is called on a DOM Event

<g:remoteLink>							Creates a link that callls a remote function

<g:formRemote>							Creates a form tag that executes an Ajax call to
										serialize the form elements

<g:javascript>							Includes a JavaScript libraries and scripts

<g:submitToRemote>						Creates a button that executes an Ajax call to seralize
										Form elemens



Form Tags
=========================================================================================
Form tags are used create HTML forms.  Contains an overview of form tags



Tag Name								Tag Description
--------------------------				------------------------------------------------
<g:actionSubmit>						Creates a submit button

<g:actionSubmitImage>					Creates a submit button using an image

<g:checkBox>							Creates a check box

<g:currencySelect>						Creates a select field containing currencies

<g:datePicker>							Creates a configurable date picker for the
										day, month , year, hour minute, and second

<g:form>								Creates a form

<g:hiddenField>							Creates a hidden field

<g:localSelect>							Creates a hidden field containing locales

<g:radio>								Creates radio button

<g:radioGroup>							Creates a radio button group

<g:select>								Creates a select/combo box field

<g:textField>							Creates a text field

<g:textArea>							Creates a text area field

<g:timeZoneSelect>						Creates a select field containing time zones


Render and Layout Tags
=========================================================================================
Render and layout tagas are used create the layouts and render templates.  As you might
expect, several render and layout tags were used in main.gsp.  


Tag Name								Tag Description
--------------------------				------------------------------------------------
<g:applyLayout>							Applies a layout to a body or template

<g:encodeAs>							Applies dynamic encoding to a block of HTML
										to bulk-encode the content

<g:formatDate>							Applies a SimpleDateFormat to date

<g:layoutHead>							Displays a decorated page's header used in
										layouts

<g:layoutBody>							Displays a decorated page's body used in
										layouts

<g:layoutTitle>							Displays a decorated page's title, which is used in
										layouts

<g:meta>								Display application metadata properities

<g:render>								Display model using a template

<g:renderErrors>						Display Errors

<g:pageProperty>						Displays a property from a decorated page

<g:paginate>							Displays Next/Previous buttons and breadcrumbs for
										large results

<g:sortableColumn>						Creates a text field


Validation Tags
=========================================================================================
Validation tags are used to display errors and messages


Tag Name								Tag Description
--------------------------				------------------------------------------------
<g:eachError>							Iterates through errors

<g:hasErrors>							Checks if errors exist within the bean, model, or 
										request

<g:message>								Displays a message

<g:fieldValue>							Displays the value of a field for a bean that has
										a data binding.




Static Resources
=======================================================================================
Resources plugin(default installed since Grails 2.0) that is used to 
include a ling to a static resource in your application.

The simple approach is below:
---------------------------------------
<g:resource dir="css" file="main.css"/>


For more complex cases...use <r:require>
-------------------------------------------------
<html>
	<head>
		<r:require module="jquery"/>

		<r:layoutResources/>
	</head>
	<body>
	....
	<r:layoutResources/>
	</body>
</html>

When we have declared the resource modules that
your GSP page requires, the framework needs
to render the links to those resources at the correct time,
 <r:layoutResources>
-------------------------------------------------
<html>
	<head>
		<g:layoutTitle/>
		<r:layoutResources/>
	</head>
	<body>
		<g:layoutBody/>
		<r:layoutResources/>
	</body>
</html>


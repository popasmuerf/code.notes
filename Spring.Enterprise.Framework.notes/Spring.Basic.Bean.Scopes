Bean MetaData : scoping
===================================
When defining a <bean> in Spring, you have the option of declaring a scope for that bean.
For example, To force Spring to produce a new bean instance each time one is needed,
you should declare the bean's scope attribute to be:

    prototype

If you need Spring to return the same bean instance each time one is needed,
you should declare the bean's scope attribute to be a:

    singleton

Bean Scope supported by Spring
==================================
Singleton
++++++++++++++++++++++++++++++++++
This scopes the bean defintiion to a asingle instance per Spring IoC
container (default)

prototype
++++++++++++++++++++++++++++++++++
this scopes a single bean definition to have any number of object
instances.

request
++++++++++++++++++++++++++++++++++
This scopes a bean definition to an HTTP Request.
Only valid in the context of a web-aware Spring ApplictionContext

session
++++++++++++++++++++++++++++++++++
This scopes a bean definition to an HTTP Request.
Only valid in the context of a web-aware Spring ApplicationContext


global-session
++++++++++++++++++++++++++++++++++
This scopes a bean definition to a global HTTP session.
Only valid for a web-aweare Spring  ApplicationContext

Singleton Scope definition XML
-------------------------------------
Just what you know a Singleton is....
only one instance of this class can exist
throughout the life :

<bean id="...." class="..." scope="singleton">
    <!colborators and configuration for this bean go here -->
</bean>


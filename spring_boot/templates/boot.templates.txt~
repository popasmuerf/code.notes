Adding support for templates
========================================
Okay, so we know how to create a super
simple applicationusing Groovy and 
Srping Boot.  We also bundled it
up as a runnable JAR file that ce be deployed
anywhere we can find a Java 6(or higher)
JVM.  However, this toy app we've built so
far was hard coded with content.  Real apps
need views tha cna handle dynamic data.  Let's make some 
tweaks and call it:

        app_with_views.groofy



//--------------Code------------------
//If it is spring related lib...I don't need 
//full on syntax like: @Grab(group='commons-lang', module='commons-lang', version'2.4)

@Grab("thymeleaf-spring4")
@Controller
class ViewBasedApp{
        def chapters = ["Quick Start With Groovy",
                         "Quick Start with Java",
                        "Debugging and Managing Your App",
                        "Data Access with Spring Boot",
                        "Securing Your App"]
@RequestMapping("/")
def home(@RequestParam(value="name",defaultValue="World")String n){
                new ModelandView("home")
                .addObject("name",n)
                .addObject("chapters",chapters)
        }
}


What's going on here?
============================================
*The @Grab("thymeleaf-spring4") pulls
-------------------------------------------------
in the Thymeleaf template engine, which causes
Boot to auto-configure some more infrastructure.
Boot suports several template engines, but we'll
be using Thymeleaft througout this book

*Replacing @RestController with @Controller
------------------------------------------------
Indicates that the return value of route mehtods is a
view and not raw content.

*The @RequestParam annotation
-------------------------------------------------
Let's us grab the incomeing name parameter
and put it in the view's Modeland View instance


*The ModelAndview class
-------------------------------------------------
is a nice container that lets us specify the view name
and provide data objects to whatevr
templated engine we choose(Thymeleaf)

Pro-Tip : templating and Boot
=======================================================
http://docs.spring.io/spring-boot/docs/1.1.6.RELEASE/reference/htmlsingle/#boot-features-spring-mvc-template-engines
Boot is not restricted to using Thymeleaf for templating..
it also supports the following templating engine
w/r templating:
        * FreeMarker
        * Groovy
        * Thymeleaf
        * Velocity
(JSPs should be avoided if possible, as there
are several known limitations when using them in
embedded servlet containers)
By default templates are located here:
---------------------------------------
src/main/resources/templates


Create templates/
--------------------------------------------------
>cd app-dir
app-dir>mkdir templates
>templates
app-dir/app-dir> vim home.html

<html>
        <head>
                <title>
                        Learning Spring
                        Boot-Chapter 1
                </title>
        </head>
        <body>
                <p th:text="'Hello, ' + ${name
        
        </body>
</html>




When it comes to Tymelef, Boot prefixes all view names with

        templates/

and appends .html at the end.  To do so, we first need to




 create the templates directry adjacent to our code


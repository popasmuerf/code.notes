Slice internals
==============================
A slice is a descriptor of an array segment.  It consists of:
*	a pointer to the array
*	current length of segment
*	total capacity

Slicing does not copy the slice's data.
A slice just points to the original array.
This makes slice operations efficient as
manipulating array indices.
In other words, modifying the elements
(not the slice itself) of a re-slice modifies
the elements of the original slice:

Length and capacity
============================
Length:
	The length of th slice is the number
	of elements referred to by the slice

Capacity:
	The number of elements in the underlying array.


Slices cannot hold past the capacity of the
underlying array.

The append() function
=======================================
We can either "grow" slices by hand
by creating a new array and then copying
it using the function:

	copy(<from>,><to>)

		-or-
	copy(<oldArray>,<NewArray>)

		-or-
	func copy(dst, src []T) int


-OR-

We can go the sane route by using the 
function :

	append()



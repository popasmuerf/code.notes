http://howtodoinjava.com/core-java/related-concepts/usage-of-class-sun-misc-unsafe/

Basics of Java's version of 
The Darkhold, The Shining Trapezohedron, The Book of Eternal Darkness...
De Vermis Mysteriis
=============================================================
sun.misc.Unsafe




Instantiation of sun.misc.Unsafe
===========================================
If you try to create an instance of Unsafe
class, you will not be allowed
because of two reasons:

1. Unsafe class has private constructor
2. It also has static methods:
        *       getUnsafe()
3. Calling Unsafe.getUnsafe() will throw
   a security exception if not ran from 
   trusted code


Work arounds....
----------------------------------------------
Field f = Usafe.class.getDeclaredField("theUnsafe") ;
f.setAccessable(true) ;
Unsafe unsafe =(Unsafe) f.get(null) ;

Note: If you get an error from you IDE, then more than likely
you can ignore it.....



Usage of sun.misc.Unsafe
=======================================================
1.) Create an instance without any restriction
--------------------------------------------------------
Using the method:

        allocateInstance()

you can create an instance of a class without
invoking it's constructor code, initialization code,
various JVM security checks and all other low
level things.  Even if class has private constructor,
Even if a class has a private constructor, then also
you use this method to create a new instance:

Alert!!! Alert!!!: This is a real nightmare for Singleton
lovers....for obvious reasons....


Example of using sun.misc.Unsafe to instantiate 
an instance of the class 
---------------------------------------------------------
class Player{
        private int age = 12 ;
        public Player(){
                this.age = 50 ;
        }
        public int getAge(){
                return this.age;
        }
        public void setAge(int age){
                this.age = age ;
        }
}

public class UnsafeDemo{
        public static void main(String[] args)throws NoSuchFieldException eIllegalArgumentException,IllegalAccessException, InstantiationException{
        Field f = Unsafe.class.getDeclaredField("theUnsafe");
        f.setAccessisble(true);
        Unsafe unsafe = (Unsafe) f.get(null) ;
        Player p = (Player) unsafe.allocateInstance(Player.class) ;
        System.out.println(p.getAge());
        System.out.println(new Plaer().getAge());          
        }
}
